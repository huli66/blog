import{_ as s,c as n,o as a,d as l}from"./app.247fb62e.js";const A=JSON.parse('{"title":"Shell","description":"","frontmatter":{},"headers":[{"level":2,"title":"编写 Shell 脚本","slug":"编写-shell-脚本","link":"#编写-shell-脚本","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":2,"title":"参数传递","slug":"参数传递","link":"#参数传递","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"运算符","slug":"运算符","link":"#运算符","children":[{"level":3,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":3,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":3,"title":"布尔运算符","slug":"布尔运算符","link":"#布尔运算符","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"字符串运算符","slug":"字符串运算符","link":"#字符串运算符","children":[]},{"level":3,"title":"文件测试运算符","slug":"文件测试运算符","link":"#文件测试运算符","children":[]}]},{"level":2,"title":"echo 命令","slug":"echo-命令","link":"#echo-命令","children":[]},{"level":2,"title":"printf 命令","slug":"printf-命令","link":"#printf-命令","children":[]},{"level":2,"title":"test 命令","slug":"test-命令","link":"#test-命令","children":[]},{"level":2,"title":"流程控制","slug":"流程控制","link":"#流程控制","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":2,"title":"输入/输出重定向","slug":"输入-输出重定向","link":"#输入-输出重定向","children":[]},{"level":2,"title":"文件包含","slug":"文件包含","link":"#文件包含","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"relativePath":"developer/others/Shell.md","lastUpdated":1683337609000}'),o={name:"developer/others/Shell.md"},p=l(`<h1 id="shell" tabindex="-1">Shell <a class="header-anchor" href="#shell" aria-hidden="true">#</a></h1><p>Shell 是一个使用 C 语言编写的程序，是用户使用 Linux 的桥梁，既是一种命令语言，也是一种程序设计语言</p><p>Shell 脚本，shell script</p><p>Linux 的 Shell 种类众多</p><ul><li>Bourne Again Shell (/bin/bash) 就是常用的 Bash ，免费易用，是大多数 Linux 默认的 Shell</li></ul><h2 id="编写-shell-脚本" tabindex="-1">编写 Shell 脚本 <a class="header-anchor" href="#编写-shell-脚本" aria-hidden="true">#</a></h2><p>运行方法</p><ul><li>跳转到相应目录，作为可执行程序执行，<strong>需要在脚本第一行注释需要用什么解释器执行脚本</strong></li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 切换到目录</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./test.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 使脚本具有执行权限</span></span>
<span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/</span><span style="color:#82AAFF;">test</span><span style="color:#FFCB6B;">.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 执行脚本</span></span>
<span class="line"></span></code></pre></div><ul><li>作为解释器参数，不需要注释声明用什么解释器</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">/bin/sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test.sh</span></span>
<span class="line"><span style="color:#FFCB6B;">/bin/php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test.php</span></span>
<span class="line"></span></code></pre></div><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 第一行注释，声明用什么解释器执行脚本</span></span>
<span class="line"><span style="color:#A6ACCD;">my_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jianjun.hu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 声明变量，只能使用 英文字母、数字、下划线 作为变量名，不能以数字开头</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $my_name </span><span style="color:#676E95;font-style:italic;"># 可以不加花括号包裹，输出 jianjun.hu</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">my_name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">good</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 加花括号确定边界</span></span>
<span class="line"><span style="color:#A6ACCD;">my_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">huli66</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 已经被定义的变量可以重新定义，此时不能加 $ 前缀</span></span>
<span class="line"><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> my_name </span><span style="color:#676E95;font-style:italic;"># 声明只读，之后再重新给 my_name 赋值会报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">your_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hhh</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">unset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your_name</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 删除变量，之后再使用会报错，不能删除只读变量，否则会报错</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello,\${my_name}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 单引号内所有内容原样输出，变量无效，不能出现转义字符</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, my name is </span><span style="color:#A6ACCD;">\\&quot;$my_name\\&quot;</span><span style="color:#C3E88D;">!\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">my_name</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 输出 6，输出字符串长度</span></span>
<span class="line"><span style="color:#A6ACCD;">my_arr</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">222</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;"># 声明属组，用 () 包裹，空格分隔，不支持多维数组</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">my_arr</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 3，效果和 \${#my_arr[0]} 一样，直接使用数组名看作使用第 0 个元素</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">my_arr</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">0</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 3</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">my_arr</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">@</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 挨个输出所有元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">runoob is a site</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">4</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 截取第 1 到 4 位，（数组计数）</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> index </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> io</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 4，查找字符 i 或 o 出现的位置，只计算第一个出现的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">:</span><span style="color:#FFCB6B;">&lt;&lt;EOF</span></span>
<span class="line"><span style="color:#FFCB6B;">用</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">&lt;&lt; </span><span style="color:#C3E88D;">定义一段函数</span></span>
<span class="line"><span style="color:#FFCB6B;">没有调用也可以当作是多行注释</span></span>
<span class="line"><span style="color:#FFCB6B;">EOF可以用其他符号替代，只是函数名</span></span>
<span class="line"><span style="color:#FFCB6B;">EOF</span></span>
<span class="line"></span></code></pre></div><h2 id="参数传递" tabindex="-1">参数传递 <a class="header-anchor" href="#参数传递" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ./tesh.sh 33 &quot;666&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">执行的文件名: </span><span style="color:#A6ACCD;font-style:italic;">$0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个参数位: </span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第二个参数: </span><span style="color:#A6ACCD;font-style:italic;">$2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">总共有$#个参数</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">当前脚本进程ID号为 </span><span style="color:#A6ACCD;">$$</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">后台运行的最后一个进程ID</span><span style="color:#A6ACCD;">$!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">所有参数：</span><span style="color:#A6ACCD;">$*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">字符串显示：</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#A6ACCD;font-style:italic;">$@</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">退出状态 </span><span style="color:#A6ACCD;">$?</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">当前选项 </span><span style="color:#A6ACCD;">$-</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-hidden="true">#</a></h2><p>Bash Shell 只支持一维数组，初始化不需要定义大小，用括号表示，用空格分隔元素</p><p>获取数组中所有元素用 <code>*</code> 或者 <code>@</code></p><p><code>declare</code> 命令声明一个关联数组，参数 <code>-A</code>，<strong>关联数组不能再被赋值为普通数组</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> -A site</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">google</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">www.google.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baidu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">www.baidu.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">taobao</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">taobao.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">google site is </span><span style="color:#89DDFF;">\${</span><span style="color:#C3E88D;">site</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">&quot;google&quot;</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># google site is www.google.com</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">@</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># www.google.com [taobao.com] www.baidu.com</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 同上</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 3</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">@</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">site[&quot;ali&quot;</span><span style="color:#A6ACCD;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">www.ali.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${!</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">]}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># ali google taobao baidu</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${#</span><span style="color:#A6ACCD;">site</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 0</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $site </span><span style="color:#676E95;font-style:italic;"># 不输出内容</span></span>
<span class="line"></span></code></pre></div><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-hidden="true">#</a></h2><p>算术运算符 关系运算符 布尔运算符 字符串运算符 文件测试运算符</p><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h3><p>原生 bash 不支持简单的数学运算，但是可以通过 awk 、expr 等命令来实现，两点注意</p><ul><li>表达式和原算法直接要有空格</li><li>完整的表达式要被反引号包含</li></ul><p><strong>乘号必须加反斜杠转义</strong><strong>Mac 的 Shell 中 expr 语法是 $(())，乘号不需要转义</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;"> + </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sum: </span><span style="color:#89DDFF;">\${</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 4</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$a</span><span style="color:#C3E88D;"> + </span><span style="color:#A6ACCD;">$b</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 30</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$a</span><span style="color:#C3E88D;"> - </span><span style="color:#A6ACCD;">$b</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># -10</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$a</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">\\*</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$b</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 200</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$a</span><span style="color:#C3E88D;"> / </span><span style="color:#A6ACCD;">$b</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 0，只保留整数部分</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$b</span><span style="color:#C3E88D;"> % </span><span style="color:#A6ACCD;">$a</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 0</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">$a </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> $b</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># [$a == $b]，不能直接输出，可以用于 if 判断</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">$a </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> $b</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 同上</span></span>
<span class="line"></span></code></pre></div><h3 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>-eq</td><td>equal 是否等于</td></tr><tr><td>-ne</td><td>not equal 是否不等</td></tr><tr><td>-gt</td><td>great than 是否大于</td></tr><tr><td>-lt</td><td>less than 是否小于</td></tr><tr><td>-ge</td><td>great or equal 是否大于等于</td></tr><tr><td>-le</td><td>less or equal 是否小于等于</td></tr></tbody></table><h3 id="布尔运算符" tabindex="-1">布尔运算符 <a class="header-anchor" href="#布尔运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>！</td><td>非运算</td></tr><tr><td>-o</td><td>或运算</td></tr><tr><td>-a</td><td>与运算</td></tr></tbody></table><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h3><p><code>&amp;&amp;</code> <code>||</code></p><h3 id="字符串运算符" tabindex="-1">字符串运算符 <a class="header-anchor" href="#字符串运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>是否相等</td></tr><tr><td>!=</td><td>是否不相等</td></tr><tr><td>-z</td><td>长度是否为 0</td></tr><tr><td>-n</td><td>长度是否不为 0</td></tr><tr><td>-$</td><td>是否不为空</td></tr></tbody></table><h3 id="文件测试运算符" tabindex="-1">文件测试运算符 <a class="header-anchor" href="#文件测试运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>-e</td><td>是否存在</td></tr><tr><td>-d</td><td>是否目录</td></tr><tr><td>-f</td><td>是否普通文件</td></tr><tr><td>-s</td><td>是否不为空，不空 true</td></tr><tr><td>-r</td><td>是否可读</td></tr><tr><td>-w</td><td>是否可写</td></tr><tr><td>...</td><td>...</td></tr></tbody></table><h2 id="echo-命令" tabindex="-1">echo 命令 <a class="header-anchor" href="#echo-命令" aria-hidden="true">#</a></h2><p>Shell 的 <code>echo</code> 指令与 PHP 的 <code>echo</code> 指令类似，都是用于字符串输出</p><p><strong>单引号显示原样字符串，不转义，不取变量</strong><strong>反引号显示命令执行结果</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 普通输出</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示转义字符</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示变量</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK! \\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># -e 开启转义，显示换行</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK! \\c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示不换行</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is a test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myfile</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示结果定向至文件</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 单引号原样输出字符串，不转义不去变量</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">date</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 反引号显示命令执行结果</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">date</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># $() 也是执行命令，更推荐使用反引号</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="printf-命令" tabindex="-1">printf 命令 <a class="header-anchor" href="#printf-命令" aria-hidden="true">#</a></h2><ul><li><p><code>print format-string [arguments]</code></p><ul><li>format: 格式控制字符串 <code>%s</code> 输出一个字符串，<code>%d</code> 整型输出，<code>%f</code> 输出实数，小数形式输出， <code>-8</code> 只宽度为 8 个字符，<code>-</code> 表示左对齐，没有则右对齐，<code>.2</code> 表示保留两位小数(<code>%f</code> 输出没有明确表示保留几位会默认保留 6 位)</li><li>arguments: 参数列表</li></ul><p><strong>格式只指定了一个（一部分），多出的参数依然会按照格式输出，format-string 被重用</strong><strong>格式字符串单引号双引号都可以，没有引号也可以输出，但是转义序列 <code>\\n</code> 会有问题</strong><strong>如果缺少部分参数，<code>%s</code> <code>%c</code> 用 NULL （不显示） 代替，<code>%d</code> <code>%f</code> 用 0 代替</strong></p></li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># print format-string [arguments]</span></span>
<span class="line"><span style="color:#FFCB6B;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%-10s %-8s %-4s\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">姓名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">性别</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">体重/kg</span></span>
<span class="line"><span style="color:#FFCB6B;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%-10s %-8s %-4.2f\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">huli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">M</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">48.666</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 格式字符串重用，下面会按照该格式输出两行</span></span>
<span class="line"><span style="color:#FFCB6B;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%-10s %-8s %-4.2f\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">huli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">M</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">48.666</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yuele</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">M</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">66</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 第三行会自动按照规则补齐</span></span>
<span class="line"><span style="color:#FFCB6B;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%-10s %-8s %-4.2f\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">huli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">M</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">48.666</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yuele</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">M</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">66</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span></span>
<span class="line"></span></code></pre></div><h2 id="test-命令" tabindex="-1">test 命令 <a class="header-anchor" href="#test-命令" aria-hidden="true">#</a></h2><p>检查某个条件是否成立，可以进行 数值、字符、文件 三个方面的测试</p><table><thead><tr><th>场景</th><th>说明</th><th></th></tr></thead><tbody><tr><td>数值测试</td><td>-eq -ne -gt -ge -lt -le</td><td>if test $[num1] -eq $[num2],[] 中执行基本算术运算</td></tr><tr><td>字符测试</td><td>= != -z(字符串长度为零则真) -n(字符串长度不为零则真)</td><td>if test -z $num1</td></tr><tr><td>文件测试</td><td>-e(文件存在) -r(文件存在且可读) -w -x -s(文件存在且至少有一个字符) -d(存在且为目录) -f(存在且为普通文件) -c(存在且为字符型特殊文件) -b(存在且块特殊文件)</td><td></td></tr></tbody></table><p><strong>代码中的 [] 执行基本的算数运算</strong></p><p><strong>Shell 还提供了 与(<code>-a</code>)、或(<code>-o</code>)、非(<code>!</code>) 三个逻辑操作符用于将测试条件连接起来，优先级 <code>!</code> 最高，<code>-a</code> 次之，<code>-o</code> 最低</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> test $</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> -eq $</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">equal!</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">not equal...</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> test -e ./notFile -o -e ./bash</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">至少一个文件存在</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-hidden="true">#</a></h2><ul><li>分支</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">elif</span><span style="color:#A6ACCD;"> condition2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果 else 里没有要执行的命令，就不要写这个 else</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command4</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 结尾的 fi 就是 if 倒过来，也是 finally 的缩写</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 写成一行也可以</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> $</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-gt</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">then</span><span style="color:#A6ACCD;"> echo</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">command2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div><ul><li>for 循环</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 写成一行</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> var </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> echo</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">value is </span><span style="color:#A6ACCD;">$var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">command2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 用空格分开，循环一次执行所有命令</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> var </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> item1 item2 item3</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><ul><li>while 语句</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">int</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;"> $init </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $int</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int++</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><ul><li>无限循环</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> :</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;"> ; ; </span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span></code></pre></div><ul><li>until 循环，意思和 <code>while</code> 刚好相反，条件判断为 true 时停止</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">until</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><ul><li>case ... esac</li></ul><p>多选择语句，类似其他语言的 <code>switch ... case</code>，是多分支选择每个分支用右圆括号开始，两个分号表示 <code>break</code> 即执行结束，跳出整个 <code>case ... esac</code> 语句，<code>esac</code> 结尾（与 case 相反）</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;font-style:italic;">$1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> $value </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">esac</span></span>
<span class="line"></span></code></pre></div><ul><li>跳出循环</li></ul><p><strong><code>break</code> 跳出当前循环</strong></p><p><strong><code>continue</code> 跳出本次循环</strong></p><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-hidden="true">#</a></h2><p>可以带 <code>function</code> 进行定义函数，也可以不带 可以显式返回一个值，如果不加将以最后一条命令运行结果作为返回值，<strong>return 后跟数值 n(0-255)</strong></p><table><thead><tr><th>参数处理</th><th>说明</th></tr></thead><tbody><tr><td>$1 $2 ..</td><td>第 n 个参数</td></tr><tr><td>$#</td><td>传递给脚本或函数的参数个数</td></tr><tr><td>$*</td><td>以一个单字符串显示所有向脚本传递的参数</td></tr><tr><td>$$</td><td>脚本运行的当前进程 ID 号</td></tr><tr><td>$!</td><td>后台运行的最后一个进程 ID 号</td></tr><tr><td>$@</td><td>与 $* 相同，但是使用时加引号，在引号中返回每个参数</td></tr><tr><td>$-</td><td>显示 Shell 使用的当前选项，与 set 命令功能相同</td></tr><tr><td>$?</td><td>显示最后命令的退出状态，0 表示没有错误，其他值表示错误，（也可以用于获取返回值？）</td></tr></tbody></table><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> function </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> funname </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">action</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">return int</span><span style="color:#89DDFF;">;]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 带参数执行</span></span>
<span class="line"><span style="color:#FFCB6B;">funname</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arg1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arg2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">...</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">funWithReturn</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">arg1: </span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">arg2: </span><span style="color:#A6ACCD;font-style:italic;">$2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Please Input A Number:</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">anotherNum</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sum is </span><span style="color:#89DDFF;">$((</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$anotherNum</span><span style="color:#89DDFF;">))&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">anotherNum</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">funWithReturn</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">return is </span><span style="color:#A6ACCD;">$?</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="输入-输出重定向" tabindex="-1">输入/输出重定向 <a class="header-anchor" href="#输入-输出重定向" aria-hidden="true">#</a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>command &gt; file</td><td>将输出重定向到 file</td></tr><tr><td>command &lt; file&gt;</td><td>将输入重定向到 file</td></tr><tr><td>command &gt;&gt; file</td><td>将输出以追加的方式重定向到 file</td></tr><tr><td>n &gt; file</td><td></td></tr><tr><td>n &gt;&gt; file</td><td></td></tr><tr><td>n &gt;&amp; m</td><td></td></tr><tr><td>n &lt;&amp; m</td><td></td></tr><tr><td>&lt;&lt; tag</td><td>将开始标记 tag 和结束标记 tag 直接的内容作为输入</td></tr></tbody></table><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 用 wc -l 命令计算行数</span></span>
<span class="line"><span style="color:#FFCB6B;">wc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-l</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">EOF</span></span>
<span class="line"><span style="color:#C3E88D;">hello</span></span>
<span class="line"><span style="color:#C3E88D;">world</span></span>
<span class="line"><span style="color:#C3E88D;">!</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不希望显示命令结果，可以重定向到 /dev/null ，这个特殊文件内容都会被丢弃</span></span>
<span class="line"><span style="color:#82AAFF;">command</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/dev/null</span></span>
<span class="line"></span></code></pre></div><h2 id="文件包含" tabindex="-1">文件包含 <a class="header-anchor" href="#文件包含" aria-hidden="true">#</a></h2><p>在一个 Shell 脚本内部包含外部脚本，这样可以很方便封装公用代码和公式</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># . 和文件名直接空一格</span></span>
<span class="line"><span style="color:#82AAFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"><span style="color:#82AAFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./test.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 或者</span></span>
<span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"></span></code></pre></div><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-hidden="true">#</a></h2><p>记录在工作中碰到的情况</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 连续执行命令，上一句的结果作为下一句的参数</span></span>
<span class="line"><span style="color:#FFCB6B;">command1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">command2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 从给定的字符串中寻找匹配内容</span></span>
<span class="line"><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hello-world</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># awk 内置函数</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print $1}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tail 命令，查看文件内容</span></span>
<span class="line"><span style="color:#FFCB6B;">tail</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-n</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示文件尾部最后 2 行的内容</span></span>
<span class="line"><span style="color:#FFCB6B;">tail</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示最后的 5 个字节内容</span></span>
<span class="line"><span style="color:#FFCB6B;">tail</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filename</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 循环刷新，显示文件最为不的内容</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># export 配置环境变量</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> USER_ID</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">HULIJIANJUN</span></span>
<span class="line"></span></code></pre></div><p><a href="https://www.runoob.com/linux/linux-shell.html" target="_blank" rel="noreferrer">参考教程</a></p>`,82),t=[p];function e(c,r,y,D,i,C){return a(),n("div",null,t)}const d=s(o,[["render",e]]);export{A as __pageData,d as default};
