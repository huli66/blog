import{_ as e,c as a,o as i,d as t}from"./app.256f9cb4.js";const x=JSON.parse('{"title":"About","description":"","frontmatter":{},"headers":[{"level":2,"title":"过往","slug":"过往","link":"#过往","children":[]},{"level":2,"title":"项目结构和技术栈","slug":"项目结构和技术栈","link":"#项目结构和技术栈","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"个人组件库","slug":"个人组件库","link":"#个人组件库","children":[]},{"level":3,"title":"个人工具库","slug":"个人工具库","link":"#个人工具库","children":[]}]}],"relativePath":"about/index.md","lastUpdated":1678287685000}'),l={name:"about/index.md"},r=t('<h1 id="about" tabindex="-1">About <a class="header-anchor" href="#about" aria-hidden="true">#</a></h1><h2 id="过往" tabindex="-1">过往 <a class="header-anchor" href="#过往" aria-hidden="true">#</a></h2><ul><li><p>2018 年最开始用 Hexo 搭建</p></li><li><p>2021 年采用 React + Next.js 搭建的服务端渲染博客，所有项目和文档在同一个项目</p></li><li><p>2021年底，进行了又一次重构，由 前端 + 服务端 + 文档 三个项目组成</p><ul><li>文档项目 - 所有 markdown 文档发布到一个 git 仓库中 设置 GitHub Action 每次推送代码后进入云服务器执行拉代码脚本（或者直接打包复制到指定目录） 该目录映射后端读取文档的目录</li><li>服务端：TypeScript + Express 通过 Docker node 容器在云服务器运行 读取指定目录所有文件，返回内容</li><li>前端：React 通过 Docker nginx 容器部署到云服务器</li></ul></li></ul><h2 id="项目结构和技术栈" tabindex="-1">项目结构和技术栈 <a class="header-anchor" href="#项目结构和技术栈" aria-hidden="true">#</a></h2><p>上一个版本实践下来，感觉实践过程中对运维知识提升倒是不少，但是现在还是觉得返璞归真才是王道，采用了简单的 <code>vite-press</code> 搭建，部署到 Github Page 上</p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-hidden="true">#</a></h2><h3 id="个人组件库" tabindex="-1">个人组件库 <a class="header-anchor" href="#个人组件库" aria-hidden="true">#</a></h3><h3 id="个人工具库" tabindex="-1">个人工具库 <a class="header-anchor" href="#个人工具库" aria-hidden="true">#</a></h3>',8),d=[r];function n(h,c,s,o,u,_){return i(),a("div",null,d)}const b=e(l,[["render",n]]);export{x as __pageData,b as default};
