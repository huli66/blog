import{_ as s,c as a,o as e,d as l}from"./app.90c1412e.js";const A=JSON.parse('{"title":"ES7-ES12","description":"","frontmatter":{"title":"ES7-ES12","lastUpdated":true},"headers":[{"level":2,"title":"ES2016 (ES7)","slug":"es2016-es7","link":"#es2016-es7","children":[{"level":3,"title":"Array.prototype.includes()","slug":"array-prototype-includes","link":"#array-prototype-includes","children":[]},{"level":3,"title":"幂运算符","slug":"幂运算符","link":"#幂运算符","children":[]}]},{"level":2,"title":"ES2017 (ES8)","slug":"es2017-es8","link":"#es2017-es8","children":[{"level":3,"title":"Object.values()","slug":"object-values","link":"#object-values","children":[]}]},{"level":2,"title":"ES2018 (ES9)","slug":"es2018-es9","link":"#es2018-es9","children":[]},{"level":2,"title":"ES2019 (ES10)","slug":"es2019-es10","link":"#es2019-es10","children":[]},{"level":2,"title":"ES2020 (ES11)","slug":"es2020-es11","link":"#es2020-es11","children":[]},{"level":2,"title":"ES2021 (ES12)","slug":"es2021-es12","link":"#es2021-es12","children":[]},{"level":2,"title":"ES2022 (ES13)","slug":"es2022-es13","link":"#es2022-es13","children":[]},{"level":2,"title":"ES2023 (ES14)","slug":"es2023-es14","link":"#es2023-es14","children":[]}],"relativePath":"blogs/notes/ES7-ES12.md","lastUpdated":1695209990000}'),n={name:"blogs/notes/ES7-ES12.md"},o=l(`<h1 id="es7-es12" tabindex="-1">ES7-ES12 <a class="header-anchor" href="#es7-es12" aria-hidden="true">#</a></h1><h2 id="es2016-es7" tabindex="-1">ES2016 (ES7) <a class="header-anchor" href="#es2016-es7" aria-hidden="true">#</a></h2><h3 id="array-prototype-includes" tabindex="-1">Array.prototype.includes() <a class="header-anchor" href="#array-prototype-includes" aria-hidden="true">#</a></h3><p>区分大小写判断数组是否存在项，但是只能判断简单类型的数据，无法判断对象类型等复杂类型</p><p>可以识别 NaN，indexOf 不能识别 NaN，只判断是否存在用 includes 更好</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(valutToFind[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> fromIndex])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 返回 ture / false ，从 fromIndex 开始找，默认为 0 ，负数则是从末尾开始往前跳 fromIndex 绝对值个索引</span></span>
<span class="line"></span></code></pre></div><h3 id="幂运算符" tabindex="-1">幂运算符 <a class="header-anchor" href="#幂运算符" aria-hidden="true">#</a></h3><p>**</p><p>效果等同于 Math.pow()</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pow</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1024</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1024</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 256</span></span>
<span class="line"><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1 / 10</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1.116... 小数次幂，先转换成分数，然后分子次幂，分母开方</span></span>
<span class="line"></span></code></pre></div><h2 id="es2017-es8" tabindex="-1">ES2017 (ES8) <a class="header-anchor" href="#es2017-es8" aria-hidden="true">#</a></h2><h3 id="object-values" tabindex="-1">Object.values() <a class="header-anchor" href="#object-values" aria-hidden="true">#</a></h3><p>返回一个数组，成员是参数自身的（不包括继承）所有可遍历（enumerable）属性的键的值</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">huli</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">188</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">values</span><span style="color:#A6ACCD;">(obj))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ &#39;huli&#39;, 18, 188 ]</span></span>
<span class="line"></span></code></pre></div><h2 id="es2018-es9" tabindex="-1">ES2018 (ES9) <a class="header-anchor" href="#es2018-es9" aria-hidden="true">#</a></h2><h2 id="es2019-es10" tabindex="-1">ES2019 (ES10) <a class="header-anchor" href="#es2019-es10" aria-hidden="true">#</a></h2><h2 id="es2020-es11" tabindex="-1">ES2020 (ES11) <a class="header-anchor" href="#es2020-es11" aria-hidden="true">#</a></h2><h2 id="es2021-es12" tabindex="-1">ES2021 (ES12) <a class="header-anchor" href="#es2021-es12" aria-hidden="true">#</a></h2><h2 id="es2022-es13" tabindex="-1">ES2022 (ES13) <a class="header-anchor" href="#es2022-es13" aria-hidden="true">#</a></h2><h2 id="es2023-es14" tabindex="-1">ES2023 (ES14) <a class="header-anchor" href="#es2023-es14" aria-hidden="true">#</a></h2>`,20),p=[o];function t(r,c,i,y,C,d){return e(),a("div",null,p)}const h=s(n,[["render",t]]);export{A as __pageData,h as default};
