import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.DOgdC_ou.js";const E=JSON.parse('{"title":"VSCode 插件","description":"","frontmatter":{"title":"VSCode 插件","lastUpdated":true},"headers":[],"relativePath":"blogs/notes/VSCode插件.md","filePath":"blogs/notes/VSCode插件.md","lastUpdated":1729515322000}'),n={name:"blogs/notes/VSCode插件.md"};function l(h,s,p,k,d,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="vscode-插件" tabindex="-1">VSCode 插件 <a class="header-anchor" href="#vscode-插件" aria-label="Permalink to &quot;VSCode 插件&quot;">​</a></h1><h2 id="auto-close-tag" tabindex="-1">Auto Close Tag <a class="header-anchor" href="#auto-close-tag" aria-label="Permalink to &quot;Auto Close Tag&quot;">​</a></h2><p>Auto Close Tag, VSCode 已经内置这个功能了，而且做的更好，可以区分是组件还是在写类型了，不用担心写类型也自动补齐一个多余的</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> APP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这里不会补一个 &lt;/IProps&gt; 了，以前的插件会</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>VSCode 不支持在 <code>.vue</code> 文件中自动闭合，可以安装 <code>Vue Languages Features(Volar)</code> 扩展插件来启用此功能</p><h2 id="auto-rename-tag" tabindex="-1">Auto Rename Tag <a class="header-anchor" href="#auto-rename-tag" aria-label="Permalink to &quot;Auto Rename Tag&quot;">​</a></h2><p>内置了，但是测试好像没有，需要在 setting.json 中设置</p><p>老版本不支持 <code>jsx</code> <code>tsx</code> 文件中自动闭合，但是新版本支持了 <code>jsx</code> <code>tsx</code></p><p>::: 但是经过测试 1.83.1 版本 是不支持的 :::</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;editor.linkedEditing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div>`,10)]))}const g=i(n,[["render",l]]);export{E as __pageData,g as default};
