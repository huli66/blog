import{_ as e,c as a,o as i,d as r}from"./app.b69e048f.js";const f=JSON.parse('{"title":"process","description":"","frontmatter":{"title":"process","lastUpdated":true},"headers":[{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":"process.nextTick()","slug":"process-nexttick","link":"#process-nexttick","children":[]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[]},{"level":2,"title":"进程的退出码","slug":"进程的退出码","link":"#进程的退出码","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"relativePath":"web/node/process.md","lastUpdated":1688968169000}'),s={name:"web/node/process.md"},l=r('<h1 id="process" tabindex="-1">process <a class="header-anchor" href="#process" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#属性">属性</a></li><li><a href="#方法">方法</a></li><li><a href="#process-nexttick">process.nextTick()</a></li><li><a href="#事件">事件</a></li><li><a href="#进程的退出码">进程的退出码</a></li><li><a href="#参考链接">参考链接</a></li></ul></nav><p>process 对象时 Node 的一个全局对象，提供当前 Node 进程的信息，可以在脚本的任意位置使用，不需要通过 require 命令加载，该对象部署了 EventEmitter 接口</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h2><ul><li>process.argv: 返回一个数组，成员是当前进程的所有命令行参数，第一个成员总是 node，第二个成员是脚本文件名</li><li>p<wbr>rocess.env: 返回一个对象，成员是当前 Shell 的环境变量，比如 p<wbr>rocess.env.HOME</li><li>process.installPrefix: 返回要给字符串，表示 Node 安装路径的前缀，比如 /usr/local，相应的，Node 执行文件目录为 /usr/local/bin/node</li><li>process.pid: 返回一个数字，代表当前进程的进程号</li><li>process.platform: 返回一个字符串，表示当前的操作系统，比如 Linux win32</li><li>process.title: 返回一个字符串，默认值为 node，可以自定义该值</li><li>process.version: 返回一个字符串，表示当前使用的 Node 版本，比如 v7.10.0</li></ul><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h2><h2 id="process-nexttick" tabindex="-1">process.nextTick() <a class="header-anchor" href="#process-nexttick" aria-hidden="true">#</a></h2><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-hidden="true">#</a></h2><h2 id="进程的退出码" tabindex="-1">进程的退出码 <a class="header-anchor" href="#进程的退出码" aria-hidden="true">#</a></h2><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-hidden="true">#</a></h2>',10),t=[l];function c(n,o,d,h,p,u){return i(),a("div",null,t)}const x=e(s,[["render",c]]);export{f as __pageData,x as default};
