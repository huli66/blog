import{_ as s,c as n,o as a,d as l}from"./app.b69e048f.js";const d=JSON.parse('{"title":"搭建monorepo项目","description":"","frontmatter":{"title":"搭建monorepo项目","lastUpdated":true},"headers":[{"level":2,"title":"初始化项目","slug":"初始化项目","link":"#初始化项目","children":[{"level":3,"title":"commit 规范检查","slug":"commit-规范检查","link":"#commit-规范检查","children":[]}]}],"relativePath":"web/react/myreact.md","lastUpdated":1688968169000}'),p={name:"web/react/myreact.md"},o=l(`<h1 id="搭建-monorepo-项目" tabindex="-1">搭建 monorepo 项目 <a class="header-anchor" href="#搭建-monorepo-项目" aria-hidden="true">#</a></h1><p>mono-repo</p><ul><li><p>简单工具： npm workspace yarn workspace pnpm workspace</p></li><li><p>专业工具： nx bit truborepo rush lerna</p></li><li><p>pnpm 相比其他打包工具（npm 和 yarn）的优势 依赖安装快（link） 更规范（处理幽灵依赖）</p></li></ul><h2 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span></code></pre></div><p>创建 <code>pnpm-workspace.yaml</code> 文件</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">packages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pack..ages/*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>添加 <code>.gitignore</code></p><div class="language-.gitignore"><button title="Copy Code" class="copy"></button><span class="lang">.gitignore</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">/node_modules</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>安装代码规范工具</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># monorepo 中需要指定依赖安装在哪个包，-w 指根目录</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 初始化，</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--init</span></span>
<span class="line"></span></code></pre></div><p>.eslintrc.json</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@typescript-eslint/eslint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 把 prettier 集成到 eslint 中，防止规则冲突</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint-config-prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint-plugin-prettier</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span></code></pre></div><ul><li>eslint-config-prettier: 覆盖 ESLint 本身的规则配置</li><li>eslint-plugin-prettier: 用 Prettier 来接管修复代码 (即 <code>eslint --fix</code>)</li></ul><p>新建 <code>.prettierrc.json</code> 配置文件</p><p>pacakge.json</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 以 .ts .tsx .jsx 结尾，自动修复，不输出，指定范围 .packages</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint --ext .ts,.tsx,.jsx --fix --quiet ./packages</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>设置 VSCode 默认格式化工具为 prettier 保存时自动格式化</p><h3 id="commit-规范检查" tabindex="-1">commit 规范检查 <a class="header-anchor" href="#commit-规范检查" aria-hidden="true">#</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># husky 初始化</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将上面实现的格式化命令 pnpm lint 纳入 commit 时 husky 将执行的脚本</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky/pre-commit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pnpm lint</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>pnpm lint 会对代码进行全量检查，项目复杂会比较慢，后续考虑使用 lint-staged 只对暂存区代码进行保存 通过 commitlint 对 git 提交信息进行检查</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commitlint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@commitlint/cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@commitlint/config-conventional</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky/commit-msg</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx --no-install commitlint -e </span><span style="color:#A6ACCD;">$HUSKY_GIT_PARAMS</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div>`,23),e=[o];function t(c,r,i,C,y,D){return a(),n("div",null,e)}const m=s(p,[["render",t]]);export{d as __pageData,m as default};
